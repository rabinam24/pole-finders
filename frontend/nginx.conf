
# HTTPS server configuration
server {
    listen 443 ssl http2;  # Use SSL on port 443 with HTTP/2
    server_name nginx.cisco.test;

    # SSL certificate and key
    ssl_certificate /etc/nginx/ssl/nginx.cisco.test.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx.cisco.test.key;

    # SSL protocols and ciphers
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';

    # SSL settings for security
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # Strict Transport Security (HSTS) for one year
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Root directory and index files
    root /usr/share/nginx/html;
    index index.html index.htm;

    # Main location block
    location / {
        try_files $uri $uri/ =404;
    }

    location /minio {
        proxy_pass http://minio-server:9000;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        add_header Access-Control-Allow-Origin "*";
        add_header Access-Control-Allow-Methods "GET, OPTIONS, PUT, POST, DELETE";
        add_header Access-Control-Allow-Headers "Content-Type, Accept, Origin, X-Requested-With, Authorization";
        add_header Access-Control-Allow-Credentials "true";

        if ($request_method = OPTIONS) {
            return 204;
        }
    }

    # Optional location for API or other services (uncomment if needed)
    # location /api/ {
    #     proxy_pass http://backend_service;
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    # }
}